version: '3.3'
services:
  
  redis:
    container_name: my_redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - my-loja

  postgres:
    container_name: my_postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "123456"
      PGDATA: /data/postgres
    volumes:
      - ./data:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - my-loja
    restart: unless-stopped

  mongo:
    container_name: my_mongo
    image: mongo:4.2
    networks:
      - my-loja
    ports:
      - '27017:27017'
    volumes:
      - ./data:/data/db

  mongo-express:
    container_name: my_mongo_express
    image: mongo-express
    depends_on:
      - mongo
    networks:
      - my-loja
    environment:
      - ME_CONFIG_MONGODB_SERVER=my_mongo
    ports:
      - '8081:8081'
    volumes:
      - ./data:/data/db

  zookeeper:
    container_name: my_zookeeper
    image: confluentinc/cp-zookeeper:latest
    networks:
      - my-loja
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka:
    container_name: my_kafka
    image: confluentinc/cp-kafka:latest
    networks:
      - my-loja
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    container_name: my_kafdrop
    image: obsidiandynamics/kafdrop:latest
    networks:
      -  my-loja
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  consul:
    container_name: my_consul
    image: consul:1.3.0
    networks:
      - my-loja
    ports:
      - "8500:8500"
  
networks:
  my-loja:
    driver: bridge